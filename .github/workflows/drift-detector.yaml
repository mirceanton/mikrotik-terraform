---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Terragrunt Drift Detection
permissions: { contents: read }

on:
  workflow_dispatch: {}
  schedule: [{ cron: "0 0/2 * * *" }] # Every 2 hours

env:
  ISSUE_TITLE: "⚠️ Terragrunt Drift Detected ⚠️"

jobs:
  terragrunt-plan:
    runs-on: [self-hosted, infra]
    environment: production
    outputs:
      drift_detected: ${{ steps.plan.outputs.drift_detected }}
      plan_output: ${{ steps.plan.outputs.plan_output }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup mise
        uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1

      - name: Terragrunt Init
        run: terragrunt init --all -upgrade

      - name: Terragrunt Plan
        id: plan
        run: |
          terragrunt plan --all --detailed-exitcode -no-color 2>&1 | tee plan_output.txt
          if [ "${PIPESTATUS[0]}" -eq 2 ]; then
            echo "drift_detected=true" | tee "$GITHUB_OUTPUT"
          else
            echo "drift_detected=false" | tee "$GITHUB_OUTPUT"
          fi
          
          # Store plan output for the next job
          {
            echo "plan_output<<EOF"
            cat plan_output.txt
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

  issue-management:
    runs-on: [self-hosted, infra]
    needs: terragrunt-plan
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup mise
        uses: jdx/mise-action@e3d7b8d67a7958d1207f6ed871e83b1ea780e7b0 # v3.3.1

      - name: Generate Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: '${{ secrets.BOT_APP_ID }}'
          private-key: '${{ secrets.BOT_APP_PRIVATE_KEY }}'

      - name: Open Issue if Drift Detected
        if: needs.terragrunt-plan.outputs.drift_detected == 'true'
        env:
          GITHUB_TOKEN: '${{ steps.app-token.outputs.token }}'
          PLAN_OUTPUT: '${{ needs.terragrunt-plan.outputs.plan_output }}'
        run: |
          ISSUE_NUMBER=$(gh issue list --state "all" --search "$ISSUE_TITLE" --json "number" --jq ".[0].number")
          if [ -n "$ISSUE_NUMBER" ]; then
            gh issue reopen "$ISSUE_NUMBER"
          else
            gh issue create --title "$ISSUE_TITLE" --body ""
            sleep 3 # Wait for issue to be created
            ISSUE_NUMBER=$(gh issue list --state "all" --search "$ISSUE_TITLE" --json "number" --jq ".[0].number")
          fi
          
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          {
            echo "## ⚠️ **Drift detected in workflow run [#${{ github.run_number }}]($RUN_URL)**"
            echo ""
            echo "Run \`terragrunt apply --all\` to reconcile changes."
            echo ""
            echo "### Plan Output"
            echo "<details>"
            echo "<summary>Click to expand drift details</summary>"
            echo ""
            echo '```'
            echo "$PLAN_OUTPUT"
            echo '```'
            echo ""
            echo "</details>"
          } > issue_body.txt
          gh issue edit "$ISSUE_NUMBER" --body-file issue_body.txt
          gh issue pin "$ISSUE_NUMBER"

      - name: Close GitHub Issue if No Drift
        if: needs.terragrunt-plan.outputs.drift_detected == 'false'
        env:
          GITHUB_TOKEN: '${{ steps.app-token.outputs.token }}'
          COMMENT: |
            ✅ No drift detected. Closing issue automatically.
            Verified in [workflow run #${{ github.run_number }}]("${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}").
        run: |
          ISSUE_NUMBER=$(gh issue list --state "open" --search "$ISSUE_TITLE" --json "number" --jq ".[0].number")
          echo "ISSUE_NUMBER is '$ISSUE_NUMBER'"
          if [ -n "$ISSUE_NUMBER" ]; then
            gh issue close "$ISSUE_NUMBER" --comment "$COMMENT"
            gh issue unpin "$ISSUE_NUMBER"
          fi
