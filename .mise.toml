[tools]
# Runtimes
node = "22.13.0"
python = "3.13.1"
uv = "0.5.21"

# Terraform stuff
"aqua:hashicorp/terraform" = "1.10.4"

# Secret Encryption Stuff
"aqua:getsops/sops" = "3.9.3"
"aqua:FiloSottile/age" = "1.2.1"

# Lint Tools
"npm:markdownlint-cli2" = "0.17.2"
"npm:commitlint" = "19.6.1"
"pipx:yamllint" = "1.35.1"
"aqua:rhysd/actionlint" = "1.7.7"

[env]
SOPS_AGE_KEY_FILE = "./age.key"

[tasks."encrypt"]
description = "Encrypt the terraform state and vars files."
sources = ["terraform.tfstate", "credentials.auto.tfvars"]
outputs = ["terraform.tfstate.sops", "credentials.auto.tfvars.sops"]
run = [
    "sops --encrypt terraform.tfstate > terraform.tfstate.sops",
    "sops --encrypt credentials.auto.tfvars > credentials.auto.tfvars.sops",
]

[tasks."decrypt"]
description = "Decrypt the terraform state and vars files."
sources = ["terraform.tfstate.sops", "credentials.auto.tfvars.sops"]
outputs = ["terraform.tfstate", "credentials.auto.tfvars"]
run = [
    "sops --decrypt terraform.tfstate.sops > terraform.tfstate",
    "sops --decrypt credentials.auto.tfvars.sops > credentials.auto.tfvars",
]

[tasks.plan]
description = "Decrypt state, run `terraform plan`, re-encrypt state"
depends = "decrypt"
depends_post = "encrypt"
run = "terraform plan"

[tasks.apply]
description = "Decrypt state, run `terraform apply`, re-encrypt state"
depends = "decrypt"
depends_post = "encrypt"
run = "terraform apply"

[tasks.init]
description = "Runs terraform init."
run = "terraform init -upgrade"

[tasks.lint]
run = [
    "actionlint",
    "yamllint -c .yamllint.yaml .",
    "markdownlint-cli2 '**/*.md' '#.terraform'",
    "terraform fmt -recursive",
    "terraform validate",
]
